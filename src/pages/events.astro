---
import BaseLayout from '../layouts/Base.astro';
import "../styles/global.css";

const pageTitle = 'Events'
const events = await Astro.glob("../content/events/*.md");
---

<BaseLayout title= { pageTitle }>
    <div class="event-cards">
    {events.map((event, i) => (
    <div class = "event-details" id ={ "event-dets-" + i.toString()}>
        <button id={"event-btn-" + i.toString()}><i class='fa-solid fa-xmark'></i></button>
        <img src={ event.frontmatter.poster }/>
        <div>
            <h1> { event.frontmatter.name } </h1>
            <h2> { event.frontmatter.time} on { event.frontmatter.date} @ { event.frontmatter.venue } </h2>
            <p set:html={ event.compiledContent() } />
            <span class="footer">
                { event.frontmatter.link ? <span><h4> Registration Link: &nbsp;</h4> <a href={ event.frontmatter.link } target="_blank">{ event.frontmatter.link }</a></span> : null }
                { event.frontmatter.organisers ? <span><h4> Organisers: &nbsp;</h4> { event.frontmatter.organisers }</span> : null }
                { event.frontmatter.contacts ? <span><h4> Contact: &nbsp;</h4> { event.frontmatter.contacts }</span> : null }
            </span>
        </div>
    </div>
    <div class = "event-card" id = { "event-" + i.toString() }>
      <span></span>
      <span></span>
      <span></span>
      <span></span>
        { event.frontmatter.name }
    </div>
    ))}
    </div>
</BaseLayout>

<style>
    :root {
        --ani-time: 400ms;
    }
    button { 
        all: unset;
        cursor: pointer;
        position: absolute;
        top: 1rem;
        right: 1.5rem;
        color: white;
        font-size: 1.5rem;
    }
    .event-details {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 8;
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        align-items: center;
        overflow: scroll;
        outline: 2px solid var(--accent-color-2);
        transform: scale(0);
        transition: transform 100ms ease-in-out;
    }
    .event-details h1 {
        text-align: center;
    }
    .event-details h2 {
        text-align: center;
    }
    .event-details img {
        max-height: 50%;
        padding-top: 1rem;
    }
    .event-details div {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        height: 50%;
        width: 90%;
        /* overflow: scroll; */
    }
    .footer {
        margin-top: 10px;
    }
    .footer span {
        display: flex;
    }
    .footer span a {
        text-decoration: underline;
        color: var(--accent-color);
    }
    .event-cards {
        position: relative;
        margin: auto;
        width: 90%;
        height: 90%;
        /* height: 100%; */
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2em 2em;
        padding-bottom: 1rem;
    }
    .event-card {
        position: relative;
        display: flex;
        padding: 10px;
        justify-content: center;
        align-items: center;
        text-align: center;
        height: 8rem;
        cursor: pointer;
        font-size: 1rem;
        overflow: hidden;
        background-color: var(--accent-color-2);
        color: var(--bg);
        text-transform: uppercase;
        outline: 2px solid white;
        transition: 50ms;
    }

    @media (min-width: 850px) {
        .event-details {
            flex-direction: row;
        }
        .event-details img {
            max-width: 30%;
            max-height: 80%;
        }
        .event-details div {
            width: 55%;
            height: 90%;
        }
        .event-cards {
            height: 80%;
            grid-template-columns: repeat(4, 1fr);
        }
        .event-card {
            font-size: 1.25rem;
            height: 10rem;
            outline: none;
            background-color: rgba(255, 255, 255, 0.05);
            color: var(--text-color);
        }
        /* Nice hover effect for event-cards by itayzrihan on codepen */
        .event-card:hover {
            color: var(--bg);
            background-color: var(--accent-color);
            box-shadow: 0 0 5px var(--accent-color), 0 0 20px var(--accent-color), 0 0 40px var(--accent-color);
            transition-delay: var(--ani-time);
        }

        .event-card span {
            position: absolute;
            display: block;
            z-index: 2;
        }

        .event-card span:nth-child(1) {
            top: 0;
            left: -100%;
            width: 100%;
            height: 2px;
            background: linear-gradient(90deg, transparent, var(--accent-color));
        }

        .event-card:hover span:nth-child(1) {
            left: 100%;
            transition: var(--ani-time);
        }


        .event-card span:nth-child(3) {
            bottom: 0;
            right: -100%;
            width: 100%;
            height: 2px;
            background: linear-gradient(270deg, transparent, var(--accent-color));
        }

        .event-card:hover span:nth-child(3) {
            right: 100%;
            transition: var(--ani-time);
            transition-delay: calc(var(--ani-time) / 2);
        }



        .event-card span:nth-child(2) {
            top: -100%;
            right: 0;
            width: 2px;
            height: 100%;
            background: linear-gradient(180deg, transparent, var(--accent-color));
        }

        .event-card:hover span:nth-child(2) {
            top: 100%;
            transition: var(--ani-time);
            transition-delay: calc(var(--ani-time) / 4);
        }



        .event-card span:nth-child(4) {
            bottom: -100%;
            left: 0;
            width: 2px;
            height: 100%;
            background: linear-gradient(360deg, transparent, var(--accent-color));
        }

        .event-card:hover span:nth-child(4) {
            bottom: 100%;
            transition: var(--ani-time);
            transition-delay: calc(var(--ani-time) * 0.75);
        }
    }
</style>

<script>

const events = document.querySelectorAll(".event-card");
for (let i = 0; i < events.length ; ++i) {
    /* eventDetails[i].style.scale = 0; */
    events[i].addEventListener("click", () => {
        const closeBtn = document.querySelector(`#event-btn-${i}`);
        const eventDets = document.querySelector(`#event-dets-${i}`)
        eventDets.style.transform = "scale(1)";
        closeBtn.addEventListener("click", () => {
            console.log("Close button clicked");
            eventDets.style.transform = "scale(0)";
        });
    });
}
</script>
